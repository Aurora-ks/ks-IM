// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/protocol.proto
// Protobuf C++ Version: 5.29.3

#ifndef proto_2fprotocol_2eproto_2epb_2eh
#define proto_2fprotocol_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fprotocol_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fprotocol_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fprotocol_2eproto;
namespace protocol {
class GroupMsgNotify;
struct GroupMsgNotifyDefaultTypeInternal;
extern GroupMsgNotifyDefaultTypeInternal _GroupMsgNotify_default_instance_;
class Msg;
struct MsgDefaultTypeInternal;
extern MsgDefaultTypeInternal _Msg_default_instance_;
class MsgACK_C;
struct MsgACK_CDefaultTypeInternal;
extern MsgACK_CDefaultTypeInternal _MsgACK_C_default_instance_;
class MsgACK_S;
struct MsgACK_SDefaultTypeInternal;
extern MsgACK_SDefaultTypeInternal _MsgACK_S_default_instance_;
class Packet;
struct PacketDefaultTypeInternal;
extern PacketDefaultTypeInternal _Packet_default_instance_;
}  // namespace protocol
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protocol {

// ===================================================================


// -------------------------------------------------------------------

class Packet final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protocol.Packet) */ {
 public:
  inline Packet() : Packet(nullptr) {}
  ~Packet() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Packet* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Packet));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Packet(
      ::google::protobuf::internal::ConstantInitialized);

  inline Packet(const Packet& from) : Packet(nullptr, from) {}
  inline Packet(Packet&& from) noexcept
      : Packet(nullptr, std::move(from)) {}
  inline Packet& operator=(const Packet& from) {
    CopyFrom(from);
    return *this;
  }
  inline Packet& operator=(Packet&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Packet& default_instance() {
    return *internal_default_instance();
  }
  static inline const Packet* internal_default_instance() {
    return reinterpret_cast<const Packet*>(
        &_Packet_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Packet& a, Packet& b) { a.Swap(&b); }
  inline void Swap(Packet* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Packet* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Packet* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Packet>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Packet& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Packet& from) { Packet::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Packet* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protocol.Packet"; }

 protected:
  explicit Packet(::google::protobuf::Arena* arena);
  Packet(::google::protobuf::Arena* arena, const Packet& from);
  Packet(::google::protobuf::Arena* arena, Packet&& from) noexcept
      : Packet(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDataFieldNumber = 6,
    kSeqFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kCmdFieldNumber = 3,
    kMsgTypeFieldNumber = 4,
    kDataLengthFieldNumber = 5,
  };
  // bytes data = 6;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // fixed64 seq = 1;
  void clear_seq() ;
  ::uint64_t seq() const;
  void set_seq(::uint64_t value);

  private:
  ::uint64_t _internal_seq() const;
  void _internal_set_seq(::uint64_t value);

  public:
  // fixed64 timestamp = 2;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // fixed32 cmd = 3;
  void clear_cmd() ;
  ::uint32_t cmd() const;
  void set_cmd(::uint32_t value);

  private:
  ::uint32_t _internal_cmd() const;
  void _internal_set_cmd(::uint32_t value);

  public:
  // fixed32 msg_type = 4;
  void clear_msg_type() ;
  ::uint32_t msg_type() const;
  void set_msg_type(::uint32_t value);

  private:
  ::uint32_t _internal_msg_type() const;
  void _internal_set_msg_type(::uint32_t value);

  public:
  // fixed32 data_length = 5;
  void clear_data_length() ;
  ::uint32_t data_length() const;
  void set_data_length(::uint32_t value);

  private:
  ::uint32_t _internal_data_length() const;
  void _internal_set_data_length(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protocol.Packet)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Packet& from_msg);
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint64_t seq_;
    ::uint64_t timestamp_;
    ::uint32_t cmd_;
    ::uint32_t msg_type_;
    ::uint32_t data_length_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fprotocol_2eproto;
};
// -------------------------------------------------------------------

class MsgACK_S final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protocol.MsgACK_S) */ {
 public:
  inline MsgACK_S() : MsgACK_S(nullptr) {}
  ~MsgACK_S() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgACK_S* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgACK_S));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgACK_S(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgACK_S(const MsgACK_S& from) : MsgACK_S(nullptr, from) {}
  inline MsgACK_S(MsgACK_S&& from) noexcept
      : MsgACK_S(nullptr, std::move(from)) {}
  inline MsgACK_S& operator=(const MsgACK_S& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgACK_S& operator=(MsgACK_S&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgACK_S& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgACK_S* internal_default_instance() {
    return reinterpret_cast<const MsgACK_S*>(
        &_MsgACK_S_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(MsgACK_S& a, MsgACK_S& b) { a.Swap(&b); }
  inline void Swap(MsgACK_S* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgACK_S* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgACK_S* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgACK_S>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgACK_S& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgACK_S& from) { MsgACK_S::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgACK_S* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protocol.MsgACK_S"; }

 protected:
  explicit MsgACK_S(::google::protobuf::Arena* arena);
  MsgACK_S(::google::protobuf::Arena* arena, const MsgACK_S& from);
  MsgACK_S(::google::protobuf::Arena* arena, MsgACK_S&& from) noexcept
      : MsgACK_S(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeqFieldNumber = 1,
    kMsgIdFieldNumber = 2,
  };
  // uint64 seq = 1;
  void clear_seq() ;
  ::uint64_t seq() const;
  void set_seq(::uint64_t value);

  private:
  ::uint64_t _internal_seq() const;
  void _internal_set_seq(::uint64_t value);

  public:
  // optional uint64 msg_id = 2;
  bool has_msg_id() const;
  void clear_msg_id() ;
  ::uint64_t msg_id() const;
  void set_msg_id(::uint64_t value);

  private:
  ::uint64_t _internal_msg_id() const;
  void _internal_set_msg_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protocol.MsgACK_S)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgACK_S& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t seq_;
    ::uint64_t msg_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fprotocol_2eproto;
};
// -------------------------------------------------------------------

class MsgACK_C final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protocol.MsgACK_C) */ {
 public:
  inline MsgACK_C() : MsgACK_C(nullptr) {}
  ~MsgACK_C() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MsgACK_C* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MsgACK_C));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MsgACK_C(
      ::google::protobuf::internal::ConstantInitialized);

  inline MsgACK_C(const MsgACK_C& from) : MsgACK_C(nullptr, from) {}
  inline MsgACK_C(MsgACK_C&& from) noexcept
      : MsgACK_C(nullptr, std::move(from)) {}
  inline MsgACK_C& operator=(const MsgACK_C& from) {
    CopyFrom(from);
    return *this;
  }
  inline MsgACK_C& operator=(MsgACK_C&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MsgACK_C& default_instance() {
    return *internal_default_instance();
  }
  static inline const MsgACK_C* internal_default_instance() {
    return reinterpret_cast<const MsgACK_C*>(
        &_MsgACK_C_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(MsgACK_C& a, MsgACK_C& b) { a.Swap(&b); }
  inline void Swap(MsgACK_C* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MsgACK_C* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MsgACK_C* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MsgACK_C>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MsgACK_C& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MsgACK_C& from) { MsgACK_C::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MsgACK_C* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protocol.MsgACK_C"; }

 protected:
  explicit MsgACK_C(::google::protobuf::Arena* arena);
  MsgACK_C(::google::protobuf::Arena* arena, const MsgACK_C& from);
  MsgACK_C(::google::protobuf::Arena* arena, MsgACK_C&& from) noexcept
      : MsgACK_C(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSeqFieldNumber = 1,
    kConvIdFieldNumber = 2,
    kLastMsgIdFieldNumber = 3,
  };
  // uint64 seq = 1;
  void clear_seq() ;
  ::uint64_t seq() const;
  void set_seq(::uint64_t value);

  private:
  ::uint64_t _internal_seq() const;
  void _internal_set_seq(::uint64_t value);

  public:
  // optional uint64 conv_id = 2;
  bool has_conv_id() const;
  void clear_conv_id() ;
  ::uint64_t conv_id() const;
  void set_conv_id(::uint64_t value);

  private:
  ::uint64_t _internal_conv_id() const;
  void _internal_set_conv_id(::uint64_t value);

  public:
  // optional uint64 last_msg_id = 3;
  bool has_last_msg_id() const;
  void clear_last_msg_id() ;
  ::uint64_t last_msg_id() const;
  void set_last_msg_id(::uint64_t value);

  private:
  ::uint64_t _internal_last_msg_id() const;
  void _internal_set_last_msg_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protocol.MsgACK_C)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MsgACK_C& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t seq_;
    ::uint64_t conv_id_;
    ::uint64_t last_msg_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fprotocol_2eproto;
};
// -------------------------------------------------------------------

class Msg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protocol.Msg) */ {
 public:
  inline Msg() : Msg(nullptr) {}
  ~Msg() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(Msg* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(Msg));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Msg(
      ::google::protobuf::internal::ConstantInitialized);

  inline Msg(const Msg& from) : Msg(nullptr, from) {}
  inline Msg(Msg&& from) noexcept
      : Msg(nullptr, std::move(from)) {}
  inline Msg& operator=(const Msg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Msg& operator=(Msg&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Msg& default_instance() {
    return *internal_default_instance();
  }
  static inline const Msg* internal_default_instance() {
    return reinterpret_cast<const Msg*>(
        &_Msg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Msg& a, Msg& b) { a.Swap(&b); }
  inline void Swap(Msg* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Msg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Msg* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<Msg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Msg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Msg& from) { Msg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(Msg* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protocol.Msg"; }

 protected:
  explicit Msg(::google::protobuf::Arena* arena);
  Msg(::google::protobuf::Arena* arena, const Msg& from);
  Msg(::google::protobuf::Arena* arena, Msg&& from) noexcept
      : Msg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kContentFieldNumber = 7,
    kFileNameFieldNumber = 8,
    kMsgIdFieldNumber = 1,
    kConversationIdFieldNumber = 2,
    kSenderIdFieldNumber = 3,
    kReceiverIdFieldNumber = 4,
    kContentTypeFieldNumber = 5,
    kIsGroupFieldNumber = 6,
  };
  // bytes content = 7;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // optional string file_name = 8;
  bool has_file_name() const;
  void clear_file_name() ;
  const std::string& file_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file_name(Arg_&& arg, Args_... args);
  std::string* mutable_file_name();
  PROTOBUF_NODISCARD std::string* release_file_name();
  void set_allocated_file_name(std::string* value);

  private:
  const std::string& _internal_file_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file_name(
      const std::string& value);
  std::string* _internal_mutable_file_name();

  public:
  // uint64 msg_id = 1;
  void clear_msg_id() ;
  ::uint64_t msg_id() const;
  void set_msg_id(::uint64_t value);

  private:
  ::uint64_t _internal_msg_id() const;
  void _internal_set_msg_id(::uint64_t value);

  public:
  // uint64 conversation_id = 2;
  void clear_conversation_id() ;
  ::uint64_t conversation_id() const;
  void set_conversation_id(::uint64_t value);

  private:
  ::uint64_t _internal_conversation_id() const;
  void _internal_set_conversation_id(::uint64_t value);

  public:
  // uint64 sender_id = 3;
  void clear_sender_id() ;
  ::uint64_t sender_id() const;
  void set_sender_id(::uint64_t value);

  private:
  ::uint64_t _internal_sender_id() const;
  void _internal_set_sender_id(::uint64_t value);

  public:
  // uint64 receiver_id = 4;
  void clear_receiver_id() ;
  ::uint64_t receiver_id() const;
  void set_receiver_id(::uint64_t value);

  private:
  ::uint64_t _internal_receiver_id() const;
  void _internal_set_receiver_id(::uint64_t value);

  public:
  // uint32 content_type = 5;
  void clear_content_type() ;
  ::uint32_t content_type() const;
  void set_content_type(::uint32_t value);

  private:
  ::uint32_t _internal_content_type() const;
  void _internal_set_content_type(::uint32_t value);

  public:
  // bool is_group = 6;
  void clear_is_group() ;
  bool is_group() const;
  void set_is_group(bool value);

  private:
  bool _internal_is_group() const;
  void _internal_set_is_group(bool value);

  public:
  // @@protoc_insertion_point(class_scope:protocol.Msg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      38, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Msg& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    ::google::protobuf::internal::ArenaStringPtr file_name_;
    ::uint64_t msg_id_;
    ::uint64_t conversation_id_;
    ::uint64_t sender_id_;
    ::uint64_t receiver_id_;
    ::uint32_t content_type_;
    bool is_group_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fprotocol_2eproto;
};
// -------------------------------------------------------------------

class GroupMsgNotify final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protocol.GroupMsgNotify) */ {
 public:
  inline GroupMsgNotify() : GroupMsgNotify(nullptr) {}
  ~GroupMsgNotify() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GroupMsgNotify* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GroupMsgNotify));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GroupMsgNotify(
      ::google::protobuf::internal::ConstantInitialized);

  inline GroupMsgNotify(const GroupMsgNotify& from) : GroupMsgNotify(nullptr, from) {}
  inline GroupMsgNotify(GroupMsgNotify&& from) noexcept
      : GroupMsgNotify(nullptr, std::move(from)) {}
  inline GroupMsgNotify& operator=(const GroupMsgNotify& from) {
    CopyFrom(from);
    return *this;
  }
  inline GroupMsgNotify& operator=(GroupMsgNotify&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GroupMsgNotify& default_instance() {
    return *internal_default_instance();
  }
  static inline const GroupMsgNotify* internal_default_instance() {
    return reinterpret_cast<const GroupMsgNotify*>(
        &_GroupMsgNotify_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GroupMsgNotify& a, GroupMsgNotify& b) { a.Swap(&b); }
  inline void Swap(GroupMsgNotify* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GroupMsgNotify* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GroupMsgNotify* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GroupMsgNotify>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GroupMsgNotify& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GroupMsgNotify& from) { GroupMsgNotify::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GroupMsgNotify* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protocol.GroupMsgNotify"; }

 protected:
  explicit GroupMsgNotify(::google::protobuf::Arena* arena);
  GroupMsgNotify(::google::protobuf::Arena* arena, const GroupMsgNotify& from);
  GroupMsgNotify(::google::protobuf::Arena* arena, GroupMsgNotify&& from) noexcept
      : GroupMsgNotify(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kGroupIdFieldNumber = 1,
  };
  // uint64 group_id = 1;
  void clear_group_id() ;
  ::uint64_t group_id() const;
  void set_group_id(::uint64_t value);

  private:
  ::uint64_t _internal_group_id() const;
  void _internal_set_group_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:protocol.GroupMsgNotify)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GroupMsgNotify& from_msg);
    ::uint64_t group_id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fprotocol_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Packet

// fixed64 seq = 1;
inline void Packet::clear_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = ::uint64_t{0u};
}
inline ::uint64_t Packet::seq() const {
  // @@protoc_insertion_point(field_get:protocol.Packet.seq)
  return _internal_seq();
}
inline void Packet::set_seq(::uint64_t value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:protocol.Packet.seq)
}
inline ::uint64_t Packet::_internal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_;
}
inline void Packet::_internal_set_seq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = value;
}

// fixed64 timestamp = 2;
inline void Packet::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t Packet::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol.Packet.timestamp)
  return _internal_timestamp();
}
inline void Packet::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:protocol.Packet.timestamp)
}
inline ::uint64_t Packet::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void Packet::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// fixed32 cmd = 3;
inline void Packet::clear_cmd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = 0u;
}
inline ::uint32_t Packet::cmd() const {
  // @@protoc_insertion_point(field_get:protocol.Packet.cmd)
  return _internal_cmd();
}
inline void Packet::set_cmd(::uint32_t value) {
  _internal_set_cmd(value);
  // @@protoc_insertion_point(field_set:protocol.Packet.cmd)
}
inline ::uint32_t Packet::_internal_cmd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cmd_;
}
inline void Packet::_internal_set_cmd(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cmd_ = value;
}

// fixed32 msg_type = 4;
inline void Packet::clear_msg_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_ = 0u;
}
inline ::uint32_t Packet::msg_type() const {
  // @@protoc_insertion_point(field_get:protocol.Packet.msg_type)
  return _internal_msg_type();
}
inline void Packet::set_msg_type(::uint32_t value) {
  _internal_set_msg_type(value);
  // @@protoc_insertion_point(field_set:protocol.Packet.msg_type)
}
inline ::uint32_t Packet::_internal_msg_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_type_;
}
inline void Packet::_internal_set_msg_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_type_ = value;
}

// fixed32 data_length = 5;
inline void Packet::clear_data_length() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_length_ = 0u;
}
inline ::uint32_t Packet::data_length() const {
  // @@protoc_insertion_point(field_get:protocol.Packet.data_length)
  return _internal_data_length();
}
inline void Packet::set_data_length(::uint32_t value) {
  _internal_set_data_length(value);
  // @@protoc_insertion_point(field_set:protocol.Packet.data_length)
}
inline ::uint32_t Packet::_internal_data_length() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_length_;
}
inline void Packet::_internal_set_data_length(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_length_ = value;
}

// bytes data = 6;
inline void Packet::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& Packet::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protocol.Packet.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Packet::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protocol.Packet.data)
}
inline std::string* Packet::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:protocol.Packet.data)
  return _s;
}
inline const std::string& Packet::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void Packet::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* Packet::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* Packet::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protocol.Packet.data)
  return _impl_.data_.Release();
}
inline void Packet::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.data_.IsDefault()) {
    _impl_.data_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Packet.data)
}

// -------------------------------------------------------------------

// Msg

// uint64 msg_id = 1;
inline void Msg::clear_msg_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_id_ = ::uint64_t{0u};
}
inline ::uint64_t Msg::msg_id() const {
  // @@protoc_insertion_point(field_get:protocol.Msg.msg_id)
  return _internal_msg_id();
}
inline void Msg::set_msg_id(::uint64_t value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:protocol.Msg.msg_id)
}
inline ::uint64_t Msg::_internal_msg_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_id_;
}
inline void Msg::_internal_set_msg_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_id_ = value;
}

// uint64 conversation_id = 2;
inline void Msg::clear_conversation_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = ::uint64_t{0u};
}
inline ::uint64_t Msg::conversation_id() const {
  // @@protoc_insertion_point(field_get:protocol.Msg.conversation_id)
  return _internal_conversation_id();
}
inline void Msg::set_conversation_id(::uint64_t value) {
  _internal_set_conversation_id(value);
  // @@protoc_insertion_point(field_set:protocol.Msg.conversation_id)
}
inline ::uint64_t Msg::_internal_conversation_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conversation_id_;
}
inline void Msg::_internal_set_conversation_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conversation_id_ = value;
}

// uint64 sender_id = 3;
inline void Msg::clear_sender_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_id_ = ::uint64_t{0u};
}
inline ::uint64_t Msg::sender_id() const {
  // @@protoc_insertion_point(field_get:protocol.Msg.sender_id)
  return _internal_sender_id();
}
inline void Msg::set_sender_id(::uint64_t value) {
  _internal_set_sender_id(value);
  // @@protoc_insertion_point(field_set:protocol.Msg.sender_id)
}
inline ::uint64_t Msg::_internal_sender_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sender_id_;
}
inline void Msg::_internal_set_sender_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sender_id_ = value;
}

// uint64 receiver_id = 4;
inline void Msg::clear_receiver_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_id_ = ::uint64_t{0u};
}
inline ::uint64_t Msg::receiver_id() const {
  // @@protoc_insertion_point(field_get:protocol.Msg.receiver_id)
  return _internal_receiver_id();
}
inline void Msg::set_receiver_id(::uint64_t value) {
  _internal_set_receiver_id(value);
  // @@protoc_insertion_point(field_set:protocol.Msg.receiver_id)
}
inline ::uint64_t Msg::_internal_receiver_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.receiver_id_;
}
inline void Msg::_internal_set_receiver_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.receiver_id_ = value;
}

// uint32 content_type = 5;
inline void Msg::clear_content_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_ = 0u;
}
inline ::uint32_t Msg::content_type() const {
  // @@protoc_insertion_point(field_get:protocol.Msg.content_type)
  return _internal_content_type();
}
inline void Msg::set_content_type(::uint32_t value) {
  _internal_set_content_type(value);
  // @@protoc_insertion_point(field_set:protocol.Msg.content_type)
}
inline ::uint32_t Msg::_internal_content_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_type_;
}
inline void Msg::_internal_set_content_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_type_ = value;
}

// bool is_group = 6;
inline void Msg::clear_is_group() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_group_ = false;
}
inline bool Msg::is_group() const {
  // @@protoc_insertion_point(field_get:protocol.Msg.is_group)
  return _internal_is_group();
}
inline void Msg::set_is_group(bool value) {
  _internal_set_is_group(value);
  // @@protoc_insertion_point(field_set:protocol.Msg.is_group)
}
inline bool Msg::_internal_is_group() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_group_;
}
inline void Msg::_internal_set_is_group(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_group_ = value;
}

// bytes content = 7;
inline void Msg::clear_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& Msg::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protocol.Msg.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Msg::set_content(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protocol.Msg.content)
}
inline std::string* Msg::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:protocol.Msg.content)
  return _s;
}
inline const std::string& Msg::_internal_content() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.content_.Get();
}
inline void Msg::_internal_set_content(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.Set(value, GetArena());
}
inline std::string* Msg::_internal_mutable_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* Msg::release_content() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protocol.Msg.content)
  return _impl_.content_.Release();
}
inline void Msg::set_allocated_content(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.content_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.content_.IsDefault()) {
    _impl_.content_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Msg.content)
}

// optional string file_name = 8;
inline bool Msg::has_file_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Msg::clear_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Msg::file_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protocol.Msg.file_name)
  return _internal_file_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Msg::set_file_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protocol.Msg.file_name)
}
inline std::string* Msg::mutable_file_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file_name();
  // @@protoc_insertion_point(field_mutable:protocol.Msg.file_name)
  return _s;
}
inline const std::string& Msg::_internal_file_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_name_.Get();
}
inline void Msg::_internal_set_file_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.file_name_.Set(value, GetArena());
}
inline std::string* Msg::_internal_mutable_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.file_name_.Mutable( GetArena());
}
inline std::string* Msg::release_file_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protocol.Msg.file_name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.file_name_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.file_name_.Set("", GetArena());
  }
  return released;
}
inline void Msg::set_allocated_file_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.file_name_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.file_name_.IsDefault()) {
    _impl_.file_name_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.Msg.file_name)
}

// -------------------------------------------------------------------

// MsgACK_C

// uint64 seq = 1;
inline void MsgACK_C::clear_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = ::uint64_t{0u};
}
inline ::uint64_t MsgACK_C::seq() const {
  // @@protoc_insertion_point(field_get:protocol.MsgACK_C.seq)
  return _internal_seq();
}
inline void MsgACK_C::set_seq(::uint64_t value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:protocol.MsgACK_C.seq)
}
inline ::uint64_t MsgACK_C::_internal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_;
}
inline void MsgACK_C::_internal_set_seq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = value;
}

// optional uint64 conv_id = 2;
inline bool MsgACK_C::has_conv_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MsgACK_C::clear_conv_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conv_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MsgACK_C::conv_id() const {
  // @@protoc_insertion_point(field_get:protocol.MsgACK_C.conv_id)
  return _internal_conv_id();
}
inline void MsgACK_C::set_conv_id(::uint64_t value) {
  _internal_set_conv_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protocol.MsgACK_C.conv_id)
}
inline ::uint64_t MsgACK_C::_internal_conv_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conv_id_;
}
inline void MsgACK_C::_internal_set_conv_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conv_id_ = value;
}

// optional uint64 last_msg_id = 3;
inline bool MsgACK_C::has_last_msg_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void MsgACK_C::clear_last_msg_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_msg_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t MsgACK_C::last_msg_id() const {
  // @@protoc_insertion_point(field_get:protocol.MsgACK_C.last_msg_id)
  return _internal_last_msg_id();
}
inline void MsgACK_C::set_last_msg_id(::uint64_t value) {
  _internal_set_last_msg_id(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:protocol.MsgACK_C.last_msg_id)
}
inline ::uint64_t MsgACK_C::_internal_last_msg_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_msg_id_;
}
inline void MsgACK_C::_internal_set_last_msg_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_msg_id_ = value;
}

// -------------------------------------------------------------------

// MsgACK_S

// uint64 seq = 1;
inline void MsgACK_S::clear_seq() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = ::uint64_t{0u};
}
inline ::uint64_t MsgACK_S::seq() const {
  // @@protoc_insertion_point(field_get:protocol.MsgACK_S.seq)
  return _internal_seq();
}
inline void MsgACK_S::set_seq(::uint64_t value) {
  _internal_set_seq(value);
  // @@protoc_insertion_point(field_set:protocol.MsgACK_S.seq)
}
inline ::uint64_t MsgACK_S::_internal_seq() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.seq_;
}
inline void MsgACK_S::_internal_set_seq(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.seq_ = value;
}

// optional uint64 msg_id = 2;
inline bool MsgACK_S::has_msg_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void MsgACK_S::clear_msg_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t MsgACK_S::msg_id() const {
  // @@protoc_insertion_point(field_get:protocol.MsgACK_S.msg_id)
  return _internal_msg_id();
}
inline void MsgACK_S::set_msg_id(::uint64_t value) {
  _internal_set_msg_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:protocol.MsgACK_S.msg_id)
}
inline ::uint64_t MsgACK_S::_internal_msg_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_id_;
}
inline void MsgACK_S::_internal_set_msg_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_id_ = value;
}

// -------------------------------------------------------------------

// GroupMsgNotify

// uint64 group_id = 1;
inline void GroupMsgNotify::clear_group_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_ = ::uint64_t{0u};
}
inline ::uint64_t GroupMsgNotify::group_id() const {
  // @@protoc_insertion_point(field_get:protocol.GroupMsgNotify.group_id)
  return _internal_group_id();
}
inline void GroupMsgNotify::set_group_id(::uint64_t value) {
  _internal_set_group_id(value);
  // @@protoc_insertion_point(field_set:protocol.GroupMsgNotify.group_id)
}
inline ::uint64_t GroupMsgNotify::_internal_group_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.group_id_;
}
inline void GroupMsgNotify::_internal_set_group_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.group_id_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fprotocol_2eproto_2epb_2eh
